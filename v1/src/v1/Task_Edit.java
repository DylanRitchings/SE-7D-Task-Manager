/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package v1;

import database_console.DBConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Konstantin Georgiev
 */
public class Task_Edit extends javax.swing.JFrame {

    /**
     * Creates new form Task_Edit
     */
    public Task_Edit() {
        initComponents();
    }
    
    public Task_Edit(String task_id, String task_title, String current_deadline, 
                     String task_description, Integer is_Complete, 
                     String assignee_email) {
        initComponents();
        
        task_id_label.setText(task_id);
        task_id_label.setVisible(false);
        assignee_text_field.setText(assignee_email);
        title_text_field.setText(task_title);
        description_text_field.setText(task_description);
        convert_date(current_deadline, currentFinishTime_year_comboBox, 
                                       currentFinishTime_month_comboBox, 
                                       currentFinishTime_day_comboBox);
        convert_date(current_deadline, newFinishTime_year_comboBox, 
                                       newFinishTime_month_comboBox, 
                                       newFinishTime_day_comboBox);
        
        if (is_Complete == 0) {
            status_checkBox.setText("Incomplete");
            status_checkBox.setSelected(false);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title_label = new javax.swing.JLabel();
        newFinishTime_year_label = new javax.swing.JLabel();
        title_text_field = new javax.swing.JTextField();
        newFinishTime_month_label = new javax.swing.JLabel();
        currentFinishTime_label = new javax.swing.JLabel();
        newFinishTime_month_comboBox = new javax.swing.JComboBox<>();
        currentFinishTime_year_comboBox = new javax.swing.JComboBox<>();
        newFinishTime_day_label = new javax.swing.JLabel();
        currentFinishTime_year_label = new javax.swing.JLabel();
        newFinishTime_day_comboBox = new javax.swing.JComboBox<>();
        currentFinishTime_month_label = new javax.swing.JLabel();
        assignee_Label = new javax.swing.JLabel();
        currentFinishTime_month_comboBox = new javax.swing.JComboBox<>();
        assignee_text_field = new javax.swing.JTextField();
        currentFinishTime_day_label = new javax.swing.JLabel();
        currentFinishTime_day_comboBox = new javax.swing.JComboBox<>();
        heading_label = new javax.swing.JLabel();
        description_label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        description_text_field = new javax.swing.JTextArea();
        newFinishTime_label = new javax.swing.JLabel();
        newFinishTime_year_comboBox = new javax.swing.JComboBox<>();
        update_task_button = new javax.swing.JButton();
        status_checkBox = new javax.swing.JCheckBox();
        jLabel_status = new javax.swing.JLabel();
        task_id_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title_label.setText("Title");

        newFinishTime_year_label.setText("Year :");

        newFinishTime_month_label.setText("Month :");

        currentFinishTime_label.setText("Current finish time");

        newFinishTime_month_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        newFinishTime_month_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFinishTime_month_comboBoxActionPerformed(evt);
            }
        });

        currentFinishTime_year_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        currentFinishTime_year_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentFinishTime_year_comboBoxActionPerformed(evt);
            }
        });

        newFinishTime_day_label.setText("Day:");

        currentFinishTime_year_label.setText("Year :");

        newFinishTime_day_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        newFinishTime_day_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFinishTime_day_comboBoxActionPerformed(evt);
            }
        });

        currentFinishTime_month_label.setText("Month :");

        assignee_Label.setText("Assignee email");

        currentFinishTime_month_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        currentFinishTime_month_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentFinishTime_month_comboBoxActionPerformed(evt);
            }
        });

        assignee_text_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignee_text_fieldActionPerformed(evt);
            }
        });

        currentFinishTime_day_label.setText("Day:");

        currentFinishTime_day_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        currentFinishTime_day_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentFinishTime_day_comboBoxActionPerformed(evt);
            }
        });

        heading_label.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        heading_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading_label.setText("Edit Task");

        description_label.setText("Description");

        description_text_field.setColumns(20);
        description_text_field.setLineWrap(true);
        description_text_field.setRows(5);
        jScrollPane1.setViewportView(description_text_field);

        newFinishTime_label.setText("New finish time");

        newFinishTime_year_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        newFinishTime_year_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFinishTime_year_comboBoxActionPerformed(evt);
            }
        });

        update_task_button.setText("Update task");
        update_task_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_task_buttonActionPerformed(evt);
            }
        });

        status_checkBox.setSelected(true);
        status_checkBox.setText("Complete");
        status_checkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                status_checkBoxActionPerformed(evt);
            }
        });

        jLabel_status.setText("Status");

        task_id_label.setText("task id");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(task_id_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(heading_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(description_label)
                            .addComponent(title_label)
                            .addComponent(currentFinishTime_label)
                            .addComponent(assignee_Label))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(currentFinishTime_year_label)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(currentFinishTime_year_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(currentFinishTime_month_label)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(currentFinishTime_month_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(currentFinishTime_day_label)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(currentFinishTime_day_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1))
                            .addComponent(assignee_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(update_task_button)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newFinishTime_label)
                                    .addComponent(jLabel_status))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(status_checkBox)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(newFinishTime_year_label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(newFinishTime_year_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(newFinishTime_month_label)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newFinishTime_month_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newFinishTime_day_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newFinishTime_day_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(heading_label, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignee_Label)
                    .addComponent(assignee_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title_label)
                    .addComponent(title_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(description_label))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentFinishTime_year_label)
                    .addComponent(currentFinishTime_year_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentFinishTime_label)
                    .addComponent(currentFinishTime_month_label)
                    .addComponent(currentFinishTime_month_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentFinishTime_day_label)
                    .addComponent(currentFinishTime_day_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newFinishTime_year_label)
                    .addComponent(newFinishTime_year_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newFinishTime_month_label)
                    .addComponent(newFinishTime_month_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newFinishTime_day_label)
                    .addComponent(newFinishTime_day_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newFinishTime_label))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(status_checkBox)
                    .addComponent(jLabel_status))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(update_task_button)
                .addGap(14, 14, 14))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(task_id_label))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void validate_days (JComboBox<String> year_comboBox, JComboBox<String> month_comboBox, JComboBox<String> day_comboBox) {
        String year_input = (String)year_comboBox.getSelectedItem();
        Integer year_input_number = Integer.parseInt(year_input);
        
        String month_input = (String)month_comboBox.getSelectedItem();
        
        // Make a String Array
        String[] high_months = new String[]{"01","03","05","07","08","10","12"};
        
        // Convert the String Array to a list so that it can be searched when 
        // deciding how many days a selected month has
        List<String> high_months_list = Arrays.asList(high_months);
        
        /*
         The length of the days of the getItemCount's is off by 1 because the
         day combo box also has a default "- -" entry in it. This is to 
         prevent user mistakes when the system is updating the day list while
         users are changing the desired year / month.
        */
        if ((year_input_number % 4 != 0) && month_input == "02" && (day_comboBox.getItemCount() != 29)) {
            day_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"}));
        }
        else if ((year_input_number % 4 == 0) && month_input == "02" && (day_comboBox.getItemCount() != 30)) {
            day_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
        }
        else if (high_months_list.contains(month_input) && (day_comboBox.getItemCount() != 32)) {
            day_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));       
        }
        else if (!high_months_list.contains(month_input) && month_input != "02" && day_comboBox.getItemCount() != 31) {
            day_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"}));
        }
    }
    
    private boolean validate_Inputs () {
        
        Integer currentFinish_year = Integer.parseInt((String)currentFinishTime_year_comboBox.getSelectedItem());
        Integer newFinish_year = Integer.parseInt((String)newFinishTime_year_comboBox.getSelectedItem());
        
        Integer currentFinish_month = Integer.parseInt((String)currentFinishTime_month_comboBox.getSelectedItem());
        Integer newFinish_month = Integer.parseInt((String)newFinishTime_month_comboBox.getSelectedItem());
        
        Integer currentFinish_day= Integer.parseInt((String)currentFinishTime_day_comboBox.getSelectedItem());
        Integer newFinish_day = Integer.parseInt((String)newFinishTime_day_comboBox.getSelectedItem());
                
        if (assignee_text_field.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Assignee email field cannot be empty.", "Input Error", 2);
            return false;
        }
        else if (title_text_field.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Title field cannot be empty.", "Input Error", 2);
            return false;
        }
        else if (description_text_field.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Description field cannot be empty.", "Input Error", 2);
            return false;
        }
        else if (currentFinishTime_day_comboBox.getSelectedItem() == "00") {
            JOptionPane.showMessageDialog(null, "Day field of Start time cannot be 00", "Input Error", 2);
            return false;
        }
        else if (newFinishTime_day_comboBox.getSelectedItem() == "00") {
            JOptionPane.showMessageDialog(null, "Day field of Finish time cannot be 00", "Input Error", 2);
            return false;
        }
        else if (currentFinish_year > newFinish_year || newFinish_year < currentFinish_year ||
                 currentFinish_year == newFinish_year && (currentFinish_month > newFinish_month || newFinish_month < currentFinish_month) ||
                 currentFinish_year == newFinish_year && currentFinish_month == newFinish_month && (currentFinish_day > newFinish_day || newFinish_day < currentFinish_day)) {
            JOptionPane.showMessageDialog(null, "New deadline cannot be earlier than current deadline", "Input Error", 2);
            return false;
        }
        else {
            return true;
        }
    }
    
    private boolean validate_Email() {
        String user_email = assignee_text_field.getText();

        String select = "SELECT * FROM `user` WHERE `User_Email` = ? ";
        ResultSet rs;
        
        try (Connection con = DBConnect.databaseConnect();) {
            
            PreparedStatement pst = con.prepareStatement(select);
            pst.setString(1, user_email);
            
            rs = pst.executeQuery();
            
            if (rs.next()) {
                
                return true;
            }
            else {
                JOptionPane.showMessageDialog(null, "No user registered with this email", "Input Error", 2);
                return false;
            }


        } catch (SQLException ex) {

            Logger lgr = Logger.getLogger(DBConnect.class.getName());
            lgr.log(Level.SEVERE, ex.getMessage(), ex);

        }
        return false;
    }
    
    // Recieves the full date as a singular string from the database and then
    // takes it apart so that the relevant parts can be assigned to the relevant
    // combo boxes.
    private void convert_date(String date, JComboBox<String> year_comboBox, 
                              JComboBox<String> month_comboBox, 
                              JComboBox<String> day_comboBox) {
        
        String year = new StringBuilder().append(date.charAt(0)).
                                          append(date.charAt(1)).
                                          append(date.charAt(2)).
                                          append(date.charAt(3)).
                                          toString();
        
        String month = new StringBuilder().append(date.charAt(5)).
                                           append(date.charAt(6)).
                                           toString();
        
        String day = new StringBuilder().append(date.charAt(8)).
                                         append(date.charAt(9)).
                                         toString();
        
        if (year_comboBox == currentFinishTime_year_comboBox) {
            year_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {year}));
            month_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {month}));
            day_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {day}));
        }
        else {
            year_comboBox.setSelectedItem(year);
            month_comboBox.setSelectedItem(month);
            day_comboBox.setSelectedItem(day);
        }

    }
    
    private void update_task() {
        Integer task_id = Integer.parseInt(task_id_label.getText());
        String assignee_email = assignee_text_field.getText();
        String title = title_text_field.getText();
        String description = description_text_field.getText();
        String new_finish = (String)newFinishTime_year_comboBox.getSelectedItem() + "-" +
                            (String)newFinishTime_month_comboBox.getSelectedItem() + "-" +
                            (String)newFinishTime_day_comboBox.getSelectedItem();
        Integer status;
        if (status_checkBox.isSelected()) {
            status = 1;
        }
        else {
            status = 0;
        }
        
        String update = "Update task SET Task_Title = ?, task_deadline = ?, Task_Description = ?, Is_Complete = ?, assignee_email = ? WHERE Task_ID = ?";
        
        try (Connection con = DBConnect.databaseConnect();) {
            
            PreparedStatement pst = con.prepareStatement(update);
            pst.setString(1, title);
            pst.setString(2, new_finish);
            pst.setString(3, description);
            pst.setInt(4, status);
            pst.setString(5, assignee_email);
            pst.setInt(6, task_id);            
            
            pst.executeUpdate();
            pst.close();
            
            JOptionPane.showMessageDialog(null, "Task update successful", "Task updated", 1);
            this.dispose();
            
        } catch (SQLException ex) {

            Logger lgr = Logger.getLogger(DBConnect.class.getName());
            lgr.log(Level.SEVERE, ex.getMessage(), ex);

        }
    }
    
    private void newFinishTime_month_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFinishTime_month_comboBoxActionPerformed
        validate_days(newFinishTime_year_comboBox, newFinishTime_month_comboBox, newFinishTime_day_comboBox);
    }//GEN-LAST:event_newFinishTime_month_comboBoxActionPerformed

    private void currentFinishTime_year_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentFinishTime_year_comboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentFinishTime_year_comboBoxActionPerformed

    private void newFinishTime_day_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFinishTime_day_comboBoxActionPerformed
        validate_days(newFinishTime_year_comboBox, newFinishTime_month_comboBox, newFinishTime_day_comboBox);
    }//GEN-LAST:event_newFinishTime_day_comboBoxActionPerformed

    private void currentFinishTime_month_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentFinishTime_month_comboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentFinishTime_month_comboBoxActionPerformed

    private void assignee_text_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignee_text_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assignee_text_fieldActionPerformed

    private void currentFinishTime_day_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentFinishTime_day_comboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentFinishTime_day_comboBoxActionPerformed

    private void newFinishTime_year_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFinishTime_year_comboBoxActionPerformed
        validate_days(newFinishTime_year_comboBox, newFinishTime_month_comboBox, newFinishTime_day_comboBox);
    }//GEN-LAST:event_newFinishTime_year_comboBoxActionPerformed

    private void update_task_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_task_buttonActionPerformed
        if (validate_Inputs() && validate_Email()) {
            update_task();
        }
        
    }//GEN-LAST:event_update_task_buttonActionPerformed

    private void status_checkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_status_checkBoxActionPerformed
        if (status_checkBox.isSelected()) {
            status_checkBox.setText("Complete");
            
        }
        else {
            status_checkBox.setText("Incomplete");
        }
    }//GEN-LAST:event_status_checkBoxActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Task_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Task_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Task_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Task_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Task_Edit().setVisible(true);
                
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel assignee_Label;
    private javax.swing.JTextField assignee_text_field;
    private javax.swing.JComboBox<String> currentFinishTime_day_comboBox;
    private javax.swing.JLabel currentFinishTime_day_label;
    private javax.swing.JLabel currentFinishTime_label;
    private javax.swing.JComboBox<String> currentFinishTime_month_comboBox;
    private javax.swing.JLabel currentFinishTime_month_label;
    private javax.swing.JComboBox<String> currentFinishTime_year_comboBox;
    private javax.swing.JLabel currentFinishTime_year_label;
    private javax.swing.JLabel description_label;
    private javax.swing.JTextArea description_text_field;
    private javax.swing.JLabel heading_label;
    private javax.swing.JLabel jLabel_status;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> newFinishTime_day_comboBox;
    private javax.swing.JLabel newFinishTime_day_label;
    private javax.swing.JLabel newFinishTime_label;
    private javax.swing.JComboBox<String> newFinishTime_month_comboBox;
    private javax.swing.JLabel newFinishTime_month_label;
    private javax.swing.JComboBox<String> newFinishTime_year_comboBox;
    private javax.swing.JLabel newFinishTime_year_label;
    private javax.swing.JCheckBox status_checkBox;
    private javax.swing.JLabel task_id_label;
    private javax.swing.JLabel title_label;
    private javax.swing.JTextField title_text_field;
    private javax.swing.JButton update_task_button;
    // End of variables declaration//GEN-END:variables
}
